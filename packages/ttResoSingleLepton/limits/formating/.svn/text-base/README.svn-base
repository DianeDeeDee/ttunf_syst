Contents:

prepareSpectraFullBinkkg.C :
- performs functions of prepareSpectra.C and testlimit.C in a single script



prepareSpectra.C : 
- Initial spectra formating
- merging of several inputs, shift systematics when two spectra disagree on the nominal spectra
- add dummy systematics when necessary
- also contains some outdated sections intended for use with the all hadronic channel
- some not currently used functionality to grab systematics from multiple input files


testlimit.C
- older script, converts spectra to format used by  TopStat
- fixes binning, add normalization uncertainties, creates the sum of all backgrounds, symmetrizes one sided backgrounds, etc
- This script could be phased out at some point if the previous one was expanded...

mergeCategories.C (optional)
-merge btagging categories together

mergeBackgrounds.C (optional)
-merge small backgrounds together 
-to be used only with prepareSpectra.C and testlimit.C

mergeBackgrounds_full.C (optional)
-merge small backgrounds together
-to be used with prepareSpectraFullBinkkg.C


smearVariations.C (optional) 
-apply smoothing to systematic fluctiations


ReNameTopStatInput.py
-Converts TopStat format to HistFitter format
-Rename histograms and remove first empty bins (see n_unfilled_bins) , and drop last bins with low stat if desired (see reduced_bins) 
-the histogram renaming procedure is a bit finicky, be sure that every systematic is listed in Syst_list
-actually creates 2 identical copies of every histogram with slightly different names (seems to be needed by HistFitter, and I haven't figured out a solution)

Scripts for producing tables for the paper:
-compute_syst_impact.C
-print_event_table.C
	



######################
OLD METHOD: instructions for prerparing spectra (old method): (updating file names, lists of systematics, backgrounds, etc in each script)
1) run prepareSpectra.C on inputs provided from spectra producers 
      	- root -l -b prepareSpectra.C+
2) run testlimit.C
 	- compile with 'make'
	- run with './testlimit'
--> output should be spectra needed by topStat
3) run ReNameTopStatInput.py	
	- python ReNameTopStatInput.py
	- hadd the four output files together
--> output should be spectra needed by HistFitter
#####################




NEW METHOD: instructions for prerparing spectra : (updating file names, lists of systematics, backgrounds, etc in each script)
1) run prepareSpectraFullBinkkg.C on inputs provided from spectra producers
        -be sure to modify
		1) the input and output file path (search for //INPUTFILE and //OUTPUTFILE)
		2) list of systematics (search for //MAIN SYS LIST )
	- root -l -b prepareSpectraFullBinkkg.C+

2) run mergeBackgrounds_full.C on output from previous step
	-copy previous steps output (just in case) and rename input of this script to the copy
	-check list of systematics- this script will skip any systematics which are not in the file safely, but make sure to add any new ones
	-run the script: root -l -b mergeBackgrounds_full.C+
		-will merge backgrounds listed in allSamples to 'Bgr' and  smallSamples to 'smallBgr'
		-modifies input file in place

optional: run smearVariations.C
	- either creates a new file with systematics smeared, or creates a parallel set of smeared systematic variations in existing file
 
3) run ReNameTopStatInput.py
        - python ReNameTopStatInput.py
        - hadd the four output files together
--> output should be spectra needed by HistFitter



NB. be sure to wait for each script to tell you it is finished or the file will not close properly (can take several minutes)




preparing tables:
	
mergeCategories.C
-merge categories, similar to other scripts

root -l -b print_event_table.C
	-errors are found by getAbsErr method.  make sure list of systematics is up to date

root -l -b compute_syst_impact.C
	spec_sign=4; : which signal to list?



checkVariations.C
-print a summary of large vs small variations
-try grep 'summary' or grep 'final summary:' on output

